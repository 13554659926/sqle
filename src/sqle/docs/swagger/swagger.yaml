basePath: /
definitions:
  controller.BaseRes:
    properties:
      code:
        example: 0
        type: integer
      message:
        example: ok
        type: string
    type: object
  controller.CreateInstReq:
    properties:
      db_type:
        description: mysql, mycat, sqlserver
        example: mysql
        type: string
      desc:
        example: this is a test instance
        type: string
      host:
        example: 10.10.10.10
        type: string
      name:
        example: test
        type: string
      password:
        example: "123456"
        type: string
      port:
        example: "3306"
        type: string
      rule_templates:
        description: this a list for rule template name
        example:
        - template_1
        items:
          type: string
        type: array
      user:
        example: root
        type: string
    type: object
  controller.CreateInstRes:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/storage.Instance'
        type: object
      message:
        example: ok
        type: string
    type: object
  controller.CreateTaskReq:
    properties:
      desc:
        example: this is a test task
        type: string
      inst_name:
        example: inst_1
        type: string
      name:
        example: test
        type: string
      schema:
        example: db1
        type: string
      sql:
        example: alter table tb1 drop columns c1
        type: string
    type: object
  controller.CreateTaskRes:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/storage.Task'
        type: object
      message:
        example: ok
        type: string
    type: object
  controller.CreateTplReq:
    properties:
      desc:
        type: string
      name:
        type: string
      rules:
        example:
        - check_name_length
        items:
          type: string
        type: array
    type: object
  controller.GetAllInstReq:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/storage.Instance'
        type: array
      message:
        example: ok
        type: string
    type: object
  controller.GetAllRuleRes:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/storage.Rule'
        type: array
      message:
        example: ok
        type: string
    type: object
  controller.GetAllTaskRes:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/storage.Task'
        type: array
      message:
        example: ok
        type: string
    type: object
  controller.GetAllTplRes:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/storage.RuleTemplate'
        type: array
      message:
        example: ok
        type: string
    type: object
  controller.GetSchemaRes:
    properties:
      code:
        example: 0
        type: integer
      data:
        example:
        - db1
        items:
          type: string
        type: array
      message:
        example: ok
        type: string
    type: object
  controller.GetTaskReq:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/storage.Task'
        type: object
      message:
        example: ok
        type: string
    type: object
  controller.PingInstRes:
    properties:
      code:
        example: 0
        type: integer
      data:
        description: 'true: ping success; false: ping failed'
        type: boolean
      message:
        example: ok
        type: string
    type: object
  storage.CommitSql:
    properties:
      exec_result:
        type: string
      exec_status:
        type: string
      inspect_level:
        type: string
      inspect_result:
        type: string
      number:
        type: integer
      sql:
        type: string
    type: object
  storage.Instance:
    properties:
      create_at:
        example: "2018-10-21T16:40:23+08:00"
        type: string
      db_type:
        example: mysql
        type: string
      desc:
        example: this is a instance
        type: string
      host:
        example: 10.10.10.10
        type: string
      id:
        example: 1
        type: integer
      name:
        type: string
      port:
        example: "3306"
        type: string
      user:
        example: root
        type: string
    type: object
  storage.RollbackSql:
    properties:
      exec_result:
        type: string
      exec_status:
        type: string
      number:
        type: integer
      sql:
        type: string
    type: object
  storage.Rule:
    properties:
      desc:
        type: string
      level:
        description: notice, warn, error
        example: error
        type: string
      name:
        type: string
      value:
        type: string
    type: object
  storage.RuleTemplate:
    properties:
      create_at:
        example: "2018-10-21T16:40:23+08:00"
        type: string
      desc:
        type: string
      id:
        example: 1
        type: integer
      name:
        type: string
      rules:
        items:
          $ref: '#/definitions/storage.Rule'
        type: array
    type: object
  storage.Sql:
    properties:
      commit_sqls:
        items:
          $ref: '#/definitions/storage.CommitSql'
        type: array
      create_at:
        example: "2018-10-21T16:40:23+08:00"
        type: string
      id:
        example: 1
        type: integer
      rollback_sqls:
        items:
          $ref: '#/definitions/storage.RollbackSql'
        type: array
      sql:
        type: string
    type: object
  storage.Task:
    properties:
      create_at:
        example: "2018-10-21T16:40:23+08:00"
        type: string
      desc:
        example: this is a task
        type: string
      id:
        example: 1
        type: integer
      instance:
        $ref: '#/definitions/storage.Instance'
        type: object
      name:
        example: REQ201812578
        type: string
      schema:
        example: db1
        type: string
      sql:
        $ref: '#/definitions/storage.Sql'
        type: object
    type: object
host: '{{.Host}}'
info:
  contact: {}
  description: This is a sample server for dev.
  license: {}
  title: Sqle API Docs
  version: "1.0"
paths:
  /instances:
    get:
      description: get all instances
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.GetAllInstReq'
            type: object
      summary: 实例列表
    post:
      consumes:
      - application/json
      - application/json
      description: create a instance<br>create a instance
      parameters:
      - description: add instance
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/controller.CreateInstReq'
          type: object
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.CreateInstRes'
            type: object
      summary: 添加实例
  /instances/{inst_id}/:
    delete:
      description: delete instance db
      parameters:
      - description: Instance ID
        in: path
        name: inst_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
            type: object
      summary: 删除实例
    put:
      description: update instance db
      parameters:
      - description: Instance ID
        in: path
        name: inst_id
        required: true
        type: string
      - description: update instance
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/controller.CreateInstReq'
          type: object
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
            type: object
      summary: 更新实例
  /instances/{inst_id}/connection:
    get:
      description: test instance db connection
      parameters:
      - description: Instance ID
        in: path
        name: inst_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.PingInstRes'
            type: object
      summary: 实例连通性测试
  /instances/{inst_id}/schemas:
    get:
      description: instance schema list
      parameters:
      - description: Instance ID
        in: path
        name: inst_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.GetSchemaRes'
            type: object
      summary: 实例 Schema 列表
  /rule_template/template_id/:
    delete:
      description: delete rule template
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
            type: object
      summary: 删除规则模板
    get:
      description: get rule template
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.GetAllRuleRes'
            type: object
      summary: 获取规则模板
    put:
      description: update rule template
      parameters:
      - description: update rule template
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/controller.CreateTplReq'
          type: object
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
            type: object
      summary: 更新规则模板
  /rule_templates:
    get:
      description: get all rule template
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.GetAllTplRes'
            type: object
      summary: 规则模板列表
    post:
      consumes:
      - application/json
      - application/json
      description: create a rule template
      parameters:
      - description: add instance
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/controller.CreateTplReq'
          type: object
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
            type: object
      summary: 添加规则模板
  /rules:
    get:
      description: get all rule template
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.GetAllRuleRes'
            type: object
      summary: 规则列表
  /tasks:
    get:
      description: get all tasks
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.GetAllTaskRes'
            type: object
      summary: Sql审核列表
    post:
      consumes:
      - application/json
      - application/json
      description: create a task
      parameters:
      - description: add task
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/controller.CreateTaskReq'
          type: object
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.CreateTaskRes'
            type: object
      summary: 创建Sql审核单
  /tasks/{task_id}:
    get:
      description: get task
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.GetTaskReq'
            type: object
      summary: 获取Sql审核单信息
  /tasks/{task_id}/commit:
    post:
      description: commit sql
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
            type: object
      summary: Sql提交上线
  /tasks/{task_id}/inspection:
    post:
      description: inspect sql
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
            type: object
      summary: Sql提交审核
  /tasks/{task_id}/rollback:
    post:
      description: rollback sql
      parameters:
      - description: manual execute rollback sql
        in: query
        name: manual_execute
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
            type: object
      summary: Sql提交回滚
swagger: "2.0"
