// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Sqlserver.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SqlserverProto {

  /// <summary>Holder for reflection information generated from Sqlserver.proto</summary>
  public static partial class SqlserverReflection {

    #region Descriptor
    /// <summary>File descriptor for Sqlserver.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SqlserverReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9TcWxzZXJ2ZXIucHJvdG8SDlNxbHNlcnZlclByb3RvIioKC0FkdmlzZUlu",
            "cHV0EgwKBFNxbHMYASADKAkSDQoFUnVsZXMYAiADKAkiRQoMQWR2aXNlT3V0",
            "cHV0EjUKDkluc3BlY3RSZXN1bHRzGAEgAygLMh0uU3Fsc2VydmVyUHJvdG8u",
            "SW5zcGVjdFJlc3VsdCJTCg1JbnNwZWN0UmVzdWx0EhUKDUluc3BlY3RTdGF0",
            "dXMYASABKAkSFAoMSW5zcGVjdExldmVsGAIgASgJEhUKDUluc3BlY3RSZXN1",
            "bHQYAyABKAkiJAoUR2V0Um9sbGJhY2tTcWxzSW5wdXQSDAoEU3FscxgBIAMo",
            "CSItChVHZXRSb2xsYmFja1NxbHNPdXRwdXQSFAoMUm9sbGJhY2tTcWxzGAEg",
            "AygJMrsBChBTcWxzZXJ2ZXJTZXJ2aWNlEkUKBkFkdmlzZRIbLlNxbHNlcnZl",
            "clByb3RvLkFkdmlzZUlucHV0GhwuU3Fsc2VydmVyUHJvdG8uQWR2aXNlT3V0",
            "cHV0IgASYAoPR2V0Um9sbGJhY2tTcWxzEiQuU3Fsc2VydmVyUHJvdG8uR2V0",
            "Um9sbGJhY2tTcWxzSW5wdXQaJS5TcWxzZXJ2ZXJQcm90by5HZXRSb2xsYmFj",
            "a1NxbHNPdXRwdXQiAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SqlserverProto.AdviseInput), global::SqlserverProto.AdviseInput.Parser, new[]{ "Sqls", "Rules" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SqlserverProto.AdviseOutput), global::SqlserverProto.AdviseOutput.Parser, new[]{ "InspectResults" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SqlserverProto.InspectResult), global::SqlserverProto.InspectResult.Parser, new[]{ "InspectStatus", "InspectLevel", "InspectResult_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SqlserverProto.GetRollbackSqlsInput), global::SqlserverProto.GetRollbackSqlsInput.Parser, new[]{ "Sqls" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SqlserverProto.GetRollbackSqlsOutput), global::SqlserverProto.GetRollbackSqlsOutput.Parser, new[]{ "RollbackSqls" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AdviseInput : pb::IMessage<AdviseInput> {
    private static readonly pb::MessageParser<AdviseInput> _parser = new pb::MessageParser<AdviseInput>(() => new AdviseInput());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdviseInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SqlserverProto.SqlserverReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdviseInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdviseInput(AdviseInput other) : this() {
      sqls_ = other.sqls_.Clone();
      rules_ = other.rules_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdviseInput Clone() {
      return new AdviseInput(this);
    }

    /// <summary>Field number for the "Sqls" field.</summary>
    public const int SqlsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_sqls_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> sqls_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Sqls {
      get { return sqls_; }
    }

    /// <summary>Field number for the "Rules" field.</summary>
    public const int RulesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_rules_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> rules_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Rules {
      get { return rules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdviseInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdviseInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sqls_.Equals(other.sqls_)) return false;
      if(!rules_.Equals(other.rules_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sqls_.GetHashCode();
      hash ^= rules_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      sqls_.WriteTo(output, _repeated_sqls_codec);
      rules_.WriteTo(output, _repeated_rules_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sqls_.CalculateSize(_repeated_sqls_codec);
      size += rules_.CalculateSize(_repeated_rules_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdviseInput other) {
      if (other == null) {
        return;
      }
      sqls_.Add(other.sqls_);
      rules_.Add(other.rules_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            sqls_.AddEntriesFrom(input, _repeated_sqls_codec);
            break;
          }
          case 18: {
            rules_.AddEntriesFrom(input, _repeated_rules_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdviseOutput : pb::IMessage<AdviseOutput> {
    private static readonly pb::MessageParser<AdviseOutput> _parser = new pb::MessageParser<AdviseOutput>(() => new AdviseOutput());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdviseOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SqlserverProto.SqlserverReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdviseOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdviseOutput(AdviseOutput other) : this() {
      inspectResults_ = other.inspectResults_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdviseOutput Clone() {
      return new AdviseOutput(this);
    }

    /// <summary>Field number for the "InspectResults" field.</summary>
    public const int InspectResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SqlserverProto.InspectResult> _repeated_inspectResults_codec
        = pb::FieldCodec.ForMessage(10, global::SqlserverProto.InspectResult.Parser);
    private readonly pbc::RepeatedField<global::SqlserverProto.InspectResult> inspectResults_ = new pbc::RepeatedField<global::SqlserverProto.InspectResult>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SqlserverProto.InspectResult> InspectResults {
      get { return inspectResults_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdviseOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdviseOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!inspectResults_.Equals(other.inspectResults_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= inspectResults_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      inspectResults_.WriteTo(output, _repeated_inspectResults_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inspectResults_.CalculateSize(_repeated_inspectResults_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdviseOutput other) {
      if (other == null) {
        return;
      }
      inspectResults_.Add(other.inspectResults_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            inspectResults_.AddEntriesFrom(input, _repeated_inspectResults_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InspectResult : pb::IMessage<InspectResult> {
    private static readonly pb::MessageParser<InspectResult> _parser = new pb::MessageParser<InspectResult>(() => new InspectResult());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InspectResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SqlserverProto.SqlserverReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectResult(InspectResult other) : this() {
      inspectStatus_ = other.inspectStatus_;
      inspectLevel_ = other.inspectLevel_;
      inspectResult_ = other.inspectResult_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectResult Clone() {
      return new InspectResult(this);
    }

    /// <summary>Field number for the "InspectStatus" field.</summary>
    public const int InspectStatusFieldNumber = 1;
    private string inspectStatus_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InspectStatus {
      get { return inspectStatus_; }
      set {
        inspectStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "InspectLevel" field.</summary>
    public const int InspectLevelFieldNumber = 2;
    private string inspectLevel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InspectLevel {
      get { return inspectLevel_; }
      set {
        inspectLevel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "InspectResult" field.</summary>
    public const int InspectResult_FieldNumber = 3;
    private string inspectResult_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InspectResult_ {
      get { return inspectResult_; }
      set {
        inspectResult_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InspectResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InspectResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InspectStatus != other.InspectStatus) return false;
      if (InspectLevel != other.InspectLevel) return false;
      if (InspectResult_ != other.InspectResult_) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InspectStatus.Length != 0) hash ^= InspectStatus.GetHashCode();
      if (InspectLevel.Length != 0) hash ^= InspectLevel.GetHashCode();
      if (InspectResult_.Length != 0) hash ^= InspectResult_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InspectStatus.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InspectStatus);
      }
      if (InspectLevel.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InspectLevel);
      }
      if (InspectResult_.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InspectResult_);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InspectStatus.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InspectStatus);
      }
      if (InspectLevel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InspectLevel);
      }
      if (InspectResult_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InspectResult_);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InspectResult other) {
      if (other == null) {
        return;
      }
      if (other.InspectStatus.Length != 0) {
        InspectStatus = other.InspectStatus;
      }
      if (other.InspectLevel.Length != 0) {
        InspectLevel = other.InspectLevel;
      }
      if (other.InspectResult_.Length != 0) {
        InspectResult_ = other.InspectResult_;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            InspectStatus = input.ReadString();
            break;
          }
          case 18: {
            InspectLevel = input.ReadString();
            break;
          }
          case 26: {
            InspectResult_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRollbackSqlsInput : pb::IMessage<GetRollbackSqlsInput> {
    private static readonly pb::MessageParser<GetRollbackSqlsInput> _parser = new pb::MessageParser<GetRollbackSqlsInput>(() => new GetRollbackSqlsInput());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRollbackSqlsInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SqlserverProto.SqlserverReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRollbackSqlsInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRollbackSqlsInput(GetRollbackSqlsInput other) : this() {
      sqls_ = other.sqls_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRollbackSqlsInput Clone() {
      return new GetRollbackSqlsInput(this);
    }

    /// <summary>Field number for the "Sqls" field.</summary>
    public const int SqlsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_sqls_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> sqls_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Sqls {
      get { return sqls_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRollbackSqlsInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRollbackSqlsInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sqls_.Equals(other.sqls_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sqls_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      sqls_.WriteTo(output, _repeated_sqls_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sqls_.CalculateSize(_repeated_sqls_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRollbackSqlsInput other) {
      if (other == null) {
        return;
      }
      sqls_.Add(other.sqls_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            sqls_.AddEntriesFrom(input, _repeated_sqls_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRollbackSqlsOutput : pb::IMessage<GetRollbackSqlsOutput> {
    private static readonly pb::MessageParser<GetRollbackSqlsOutput> _parser = new pb::MessageParser<GetRollbackSqlsOutput>(() => new GetRollbackSqlsOutput());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRollbackSqlsOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SqlserverProto.SqlserverReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRollbackSqlsOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRollbackSqlsOutput(GetRollbackSqlsOutput other) : this() {
      rollbackSqls_ = other.rollbackSqls_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRollbackSqlsOutput Clone() {
      return new GetRollbackSqlsOutput(this);
    }

    /// <summary>Field number for the "RollbackSqls" field.</summary>
    public const int RollbackSqlsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_rollbackSqls_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> rollbackSqls_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RollbackSqls {
      get { return rollbackSqls_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRollbackSqlsOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRollbackSqlsOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rollbackSqls_.Equals(other.rollbackSqls_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rollbackSqls_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      rollbackSqls_.WriteTo(output, _repeated_rollbackSqls_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rollbackSqls_.CalculateSize(_repeated_rollbackSqls_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRollbackSqlsOutput other) {
      if (other == null) {
        return;
      }
      rollbackSqls_.Add(other.rollbackSqls_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            rollbackSqls_.AddEntriesFrom(input, _repeated_rollbackSqls_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
