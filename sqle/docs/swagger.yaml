basePath: /
definitions:
  controller.BaseRes:
    properties:
      code:
        example: 0
        type: integer
      message:
        example: ok
        type: string
    type: object
  v1.CreateInstanceReqV1:
    properties:
      db_host:
        example: 10.10.10.10
        type: string
      db_password:
        example: "123456"
        type: string
      db_port:
        example: "3306"
        type: string
      db_user:
        example: root
        type: string
      desc:
        example: this is a test instance
        type: string
      instance_name:
        example: test
        type: string
      role_name_list:
        items:
          type: string
        type: array
      rule_template_name_list:
        items:
          type: string
        type: array
      workflow_template_name:
        type: string
    type: object
  v1.CreateRoleReqV1:
    properties:
      instance_name_list:
        items:
          type: string
        type: array
      role_desc:
        type: string
      role_name:
        type: string
      user_name_list:
        items:
          type: string
        type: array
    type: object
  v1.CreateRuleTemplateReqV1:
    properties:
      desc:
        type: string
      instance_name_list:
        items:
          type: string
        type: array
      rule_name_list:
        example:
        - ddl_check_index_count
        items:
          type: string
        type: array
      rule_template_name:
        type: string
    type: object
  v1.CreateUserReqV1:
    properties:
      email:
        example: test@email.com
        type: string
      role_name_list:
        items:
          type: string
        type: array
      user_name:
        example: test
        type: string
      user_password:
        example: "123456"
        type: string
    type: object
  v1.GetInstanceConnectableReqV1:
    properties:
      host:
        example: 10.10.10.10
        type: string
      password:
        example: "123456"
        type: string
      port:
        example: "3306"
        type: string
      user:
        example: root
        type: string
    type: object
  v1.GetInstanceConnectableResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.InstanceConnectableResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetInstanceResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.InstanceResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetInstanceSchemaResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.InstanceSchemaResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetInstanceTipsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.InstanceTipResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetInstancesResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.InstanceResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetRoleTipsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.RoleTipResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetRolesResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.RoleResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetRuleTemplateResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.RuleTemplateDetailResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetRuleTemplateTipsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.RuleTemplateTipResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetRuleTemplatesResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.RuleTemplateDetailResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetRulesResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.RuleResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetUserDetailResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.UserDetailResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetUserLoginResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.UserLoginResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetUserTipsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.UserTipResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetUsersResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.UserResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.InstanceConnectableResV1:
    properties:
      is_instance_connectable:
        type: boolean
    type: object
  v1.InstanceResV1:
    properties:
      db_host:
        example: 10.10.10.10
        type: string
      db_port:
        example: "3306"
        type: string
      db_user:
        example: root
        type: string
      desc:
        example: this is a instance
        type: string
      instance_name:
        type: string
      role_name_list:
        items:
          type: string
        type: array
      rule_template_name_list:
        items:
          type: string
        type: array
      workflow_template_name:
        type: string
    type: object
  v1.InstanceSchemaResV1:
    properties:
      schema_name_list:
        items:
          type: string
        type: array
    type: object
  v1.InstanceTipResV1:
    properties:
      instance_name:
        type: string
    type: object
  v1.RoleResV1:
    properties:
      instance_name_list:
        items:
          type: string
        type: array
      role_desc:
        type: string
      role_name:
        type: string
      user_name_list:
        items:
          type: string
        type: array
    type: object
  v1.RoleTipResV1:
    properties:
      role_name:
        type: string
    type: object
  v1.RuleResV1:
    properties:
      desc:
        type: string
      level:
        description: notice, warn, error
        example: error
        type: string
      rule_name:
        type: string
      value:
        type: string
    type: object
  v1.RuleTemplateDetailResV1:
    properties:
      desc:
        type: string
      instance_name_list:
        items:
          type: string
        type: array
      rule_name_list:
        items:
          type: string
        type: array
      rule_template_name:
        type: string
    type: object
  v1.RuleTemplateTipResV1:
    properties:
      rule_template_name:
        type: string
    type: object
  v1.UpdateInstanceReqV1:
    properties:
      db_host:
        example: 10.10.10.10
        type: string
      db_password:
        example: "123456"
        type: string
      db_port:
        example: "3306"
        type: string
      db_user:
        example: root
        type: string
      desc:
        example: this is a test instance
        type: string
      role_name_list:
        items:
          type: string
        type: array
      rule_template_name_list:
        example:
        - "1"
        items:
          type: string
        type: array
      workflow_template_name:
        type: string
    type: object
  v1.UpdateRoleReqV1:
    properties:
      instance_name_list:
        items:
          type: string
        type: array
      role_desc:
        type: string
      user_name_list:
        items:
          type: string
        type: array
    type: object
  v1.UpdateRuleTemplateReqV1:
    properties:
      desc:
        type: string
      instance_name_list:
        example:
        - mysql-xxx
        items:
          type: string
        type: array
      rule_name_list:
        example:
        - ddl_check_index_count
        items:
          type: string
        type: array
    type: object
  v1.UpdateUserReqV1:
    properties:
      email:
        type: string
      role_name_list:
        items:
          type: string
        type: array
    type: object
  v1.UserDetailResV1:
    properties:
      email:
        type: string
      is_admin:
        type: boolean
      role_name_list:
        items:
          type: string
        type: array
      user_name:
        type: string
    type: object
  v1.UserLoginReqV1:
    properties:
      password:
        example: "123456"
        type: string
      username:
        example: test
        type: string
    type: object
  v1.UserLoginResV1:
    properties:
      token:
        example: this is a jwt token string
        type: string
    type: object
  v1.UserResV1:
    properties:
      email:
        type: string
      role_name_list:
        items:
          type: string
        type: array
      user_name:
        type: string
    type: object
  v1.UserTipResV1:
    properties:
      user_name:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server for dev.
  license: {}
  title: Sqle API Docs
  version: "1.0"
paths:
  /v1/instance_connection:
    post:
      consumes:
      - application/json
      description: test instance db connection 注：可直接提交创建实例接口的body，该接口的json 内容是创建实例的
        json 的子集
      operationId: checkInstanceIsConnectableV1
      parameters:
      - description: instance info
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.GetInstanceConnectableReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstanceConnectableResV1'
      security:
      - ApiKeyAuth: []
      summary: 实例连通性测试（实例提交前）
      tags:
      - instance
  /v1/instance_tips:
    get:
      description: get instance tip list
      operationId: getInstanceTipListV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstanceTipsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取实例提示列表
      tags:
      - instance
  /v1/instances:
    get:
      description: get instance info list
      operationId: getInstanceListV1
      parameters:
      - description: filter instance name
        in: query
        name: filter_instance_name
        type: string
      - description: filter db host
        in: query
        name: filter_db_host
        type: string
      - description: filter db port
        in: query
        name: filter_db_port
        type: string
      - description: filter db user
        in: query
        name: filter_db_user
        type: string
      - description: filter workflow rule template name
        in: query
        name: filter_workflow_template_name
        type: string
      - description: filter rule template name
        in: query
        name: filter_rule_template_name
        type: string
      - description: filter role name
        in: query
        name: filter_role_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstancesResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取实例信息列表
      tags:
      - instance
    post:
      consumes:
      - application/json
      description: create a instance
      operationId: createInstanceV1
      parameters:
      - description: add instance
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateInstanceReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 添加实例
      tags:
      - instance
  /v1/instances/{instance_name}/:
    delete:
      description: delete instance db
      operationId: deleteInstanceV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除实例
      tags:
      - instance
    get:
      description: get instance db
      operationId: getInstanceV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstanceResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取实例信息
      tags:
      - instance
    patch:
      description: update instance
      operationId: updateInstanceV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      - description: update instance request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateInstanceReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新实例
      tags:
      - instance
  /v1/instances/{instance_name}/connection:
    get:
      description: test instance db connection
      operationId: checkInstanceIsConnectableByNameV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstanceConnectableResV1'
      security:
      - ApiKeyAuth: []
      summary: 实例连通性测试（实例提交后）
      tags:
      - instance
  /v1/instances/{instance_name}/schemas:
    get:
      description: instance schema list
      operationId: getInstanceSchemasV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstanceSchemaResV1'
      security:
      - ApiKeyAuth: []
      summary: 实例 Schema 列表
      tags:
      - instance
  /v1/login:
    post:
      description: user login
      operationId: loginV1
      parameters:
      - description: user login request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/v1.UserLoginReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUserLoginResV1'
      summary: 用户登录
      tags:
      - user
  /v1/role_tips:
    get:
      description: get role tip list
      operationId: getRoleTipListV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRoleTipsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取角色提示列表
      tags:
      - role
  /v1/roles:
    get:
      consumes:
      - application/json
      description: get role list
      operationId: getRoleListV1
      parameters:
      - description: filter role name
        in: query
        name: filter_role_name
        type: string
      - description: filter user name
        in: query
        name: filter_user_name
        type: string
      - description: filter instance name
        in: query
        name: filter_instance_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRolesResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取角色列表
      tags:
      - role
    post:
      consumes:
      - application/json
      description: create role
      operationId: createRoleV1
      parameters:
      - description: create role
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateRoleReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 创建角色
      tags:
      - role
  /v1/roles/{role_name}/:
    delete:
      consumes:
      - application/json
      description: delete role
      operationId: deleteRoleV1
      parameters:
      - description: role name
        in: path
        name: role_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除角色
      tags:
      - role
    patch:
      consumes:
      - application/json
      description: update role
      operationId: updateRoleV1
      parameters:
      - description: role name
        in: path
        name: role_name
        required: true
        type: string
      - description: update role request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateRoleReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新角色信息
      tags:
      - role
  /v1/rule_template_tips:
    get:
      description: get rule template tips
      operationId: getRuleTemplateTipsV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRuleTemplateTipsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取规则模板提示
      tags:
      - rule_template
  /v1/rule_templates:
    get:
      description: get all rule template
      operationId: getRuleTemplateListV1
      parameters:
      - description: filter instance name
        in: query
        name: filter_instance_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRuleTemplatesResV1'
      security:
      - ApiKeyAuth: []
      summary: 规则模板列表
      tags:
      - rule_template
    post:
      consumes:
      - application/json
      description: create a rule template
      operationId: createRuleTemplateV1
      parameters:
      - description: add rule template request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateRuleTemplateReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 添加规则模板
      tags:
      - rule_template
  /v1/rule_templates/{rule_template_name}/:
    delete:
      description: delete rule template
      operationId: deleteRuleTemplateV1
      parameters:
      - description: rule template name
        in: path
        name: rule_template_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除规则模板
      tags:
      - rule_template
    get:
      description: get rule template
      operationId: getRuleTemplateV1
      parameters:
      - description: rule template name
        in: path
        name: rule_template_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRuleTemplateResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取规则模板信息
      tags:
      - rule_template
    patch:
      description: update rule template
      operationId: updateRuleTemplateV1
      parameters:
      - description: rule template name
        in: path
        name: rule_template_name
        required: true
        type: string
      - description: update rule template request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateRuleTemplateReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新规则模板
      tags:
      - rule_template
  /v1/rules:
    get:
      description: get all rule template
      operationId: getRuleListV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRulesResV1'
      security:
      - ApiKeyAuth: []
      summary: 规则列表
      tags:
      - rule_template
  /v1/test:
    get:
      description: user login
      operationId: testV1
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: test
      tags:
      - user
  /v1/user:
    get:
      description: get current user info
      operationId: getCurrentUserV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUserDetailResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取当前用户信息
      tags:
      - user
  /v1/user_tips:
    get:
      description: get user tip list
      operationId: getUserTipListV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUserTipsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取用户提示列表
      tags:
      - user
  /v1/users:
    get:
      description: get user info list
      operationId: getUserListV1
      parameters:
      - description: filter user name
        in: query
        name: filter_user_name
        type: string
      - description: filter role name
        in: query
        name: filter_role_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUsersResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息列表
      tags:
      - user
    post:
      consumes:
      - application/json
      description: create user
      operationId: createUserV1
      parameters:
      - description: create user
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateUserReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 创建用户
      tags:
      - user
  /v1/users/{user_name}/:
    delete:
      description: delete user
      operationId: deleteUserV1
      parameters:
      - description: user name
        in: path
        name: user_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - user
    get:
      description: get user info
      operationId: getUserV1
      parameters:
      - description: user name
        in: path
        name: user_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUserDetailResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: update user
      operationId: updateUserV1
      parameters:
      - description: user name
        in: path
        name: user_name
        required: true
        type: string
      - description: update user
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateUserReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新用户信息
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
