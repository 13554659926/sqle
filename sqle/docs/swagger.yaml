basePath: /
definitions:
  controller.BaseRes:
    properties:
      code:
        example: 0
        type: integer
      message:
        example: ok
        type: string
    type: object
  v1.CreateRoleReqV1:
    properties:
      instance_name_list:
        items:
          type: string
        type: array
      role_desc:
        type: string
      role_name:
        type: string
      user_name_list:
        items:
          type: string
        type: array
    type: object
  v1.CreateUserReqV1:
    properties:
      email:
        example: test@email.com
        type: string
      role_name_list:
        items:
          type: string
        type: array
      user_name:
        example: test
        type: string
      user_password:
        example: "123456"
        type: string
    type: object
  v1.GetRoleTipsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.RoleTipResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetRolesResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.RoleResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetUserLoginResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.UserLoginResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetUserTipsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.UserTipResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetUsersResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.UserResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.RoleResV1:
    properties:
      instance_name_list:
        items:
          type: string
        type: array
      role_desc:
        type: string
      role_name:
        type: string
      user_name_list:
        items:
          type: string
        type: array
    type: object
  v1.RoleTipResV1:
    properties:
      role_name:
        type: string
    type: object
  v1.UpdateRoleReqV1:
    properties:
      instance_name_list:
        items:
          type: string
        type: array
      role_desc:
        type: string
      user_name_list:
        items:
          type: string
        type: array
    type: object
  v1.UpdateUserReqV1:
    properties:
      email:
        type: string
      role_name_list:
        items:
          type: string
        type: array
    type: object
  v1.UserLoginReqV1:
    properties:
      password:
        example: "123456"
        type: string
      username:
        example: test
        type: string
    type: object
  v1.UserLoginResV1:
    properties:
      is_admin:
        type: boolean
      token:
        example: this is a jwt token string
        type: string
    type: object
  v1.UserResV1:
    properties:
      email:
        type: string
      role_name_list:
        items:
          type: string
        type: array
      user_name:
        type: string
    type: object
  v1.UserTipResV1:
    properties:
      user_name:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server for dev.
  license: {}
  title: Sqle API Docs
  version: "1.0"
paths:
  /v1/login:
    post:
      description: user login
      operationId: loginV1
      parameters:
      - description: user login request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/v1.UserLoginReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUserLoginResV1'
      summary: 用户登录
      tags:
      - user
  /v1/role_tips:
    get:
      description: get role tip list
      operationId: getRoleTipListV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRoleTipsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取角色提示列表
      tags:
      - role
  /v1/roles:
    get:
      consumes:
      - application/json
      description: get role list
      operationId: getRoleListV1
      parameters:
      - description: filter role name
        in: query
        name: filter_role_name
        type: string
      - description: filter user name
        in: query
        name: filter_user_name
        type: string
      - description: filter instance name
        in: query
        name: filter_instance_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRolesResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取角色列表
      tags:
      - role
    post:
      consumes:
      - application/json
      description: create role
      operationId: createRoleV1
      parameters:
      - description: create role
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateRoleReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 创建角色
      tags:
      - role
  /v1/roles/{role_name}/:
    delete:
      consumes:
      - application/json
      description: delete role
      operationId: deleteRoleV1
      parameters:
      - description: role name
        in: path
        name: role_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除角色
      tags:
      - role
    patch:
      consumes:
      - application/json
      description: update role
      operationId: updateRoleV1
      parameters:
      - description: role name
        in: path
        name: role_name
        required: true
        type: string
      - description: update role request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateRoleReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新角色信息
      tags:
      - role
  /v1/test:
    get:
      description: user login
      operationId: testV1
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: test
      tags:
      - user
  /v1/user_tips:
    get:
      description: get user tip list
      operationId: getUserTipListV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUserTipsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取用户提示列表
      tags:
      - user
  /v1/users:
    get:
      description: get user info list
      operationId: getUserListV1
      parameters:
      - description: filter user name
        in: query
        name: filter_user_name
        type: string
      - description: filter role name
        in: query
        name: filter_role_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUsersResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息列表
      tags:
      - user
    post:
      consumes:
      - application/json
      description: create user
      operationId: createUserV1
      parameters:
      - description: create user
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateUserReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 创建用户
      tags:
      - user
  /v1/users/{user_name}/:
    delete:
      description: delete user
      operationId: deleteUserV1
      parameters:
      - description: user name
        in: path
        name: user_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - user
    get:
      description: get user info
      operationId: getUserV1
      parameters:
      - description: user name
        in: path
        name: user_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.UserResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: update user
      operationId: updateUserV1
      parameters:
      - description: user name
        in: path
        name: user_name
        required: true
        type: string
      - description: update user
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateUserReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新用户信息
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
