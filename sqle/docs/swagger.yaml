basePath: /
definitions:
  controller.BaseRes:
    properties:
      code:
        example: 0
        type: integer
      message:
        example: ok
        type: string
    type: object
  v1.AuditTaskResV1:
    properties:
      instance_name:
        type: string
      instance_schema:
        example: db1
        type: string
      pass_rate:
        type: number
      status:
        enum:
        - initialized
        - audited
        - executing
        - exec_success
        - exec_failed
        type: string
      task_id:
        type: integer
    type: object
  v1.AuditTaskSQLResV1:
    properties:
      audit_level:
        type: string
      audit_result:
        type: string
      audit_status:
        type: string
      exec_result:
        type: string
      exec_sql:
        type: string
      exec_status:
        type: string
      number:
        type: integer
      rollback_sql:
        type: string
    type: object
  v1.AuditWhitelistResV1:
    properties:
      audit_whitelist_id:
        type: integer
      desc:
        type: string
      value:
        type: string
    type: object
  v1.CreateAuditWhitelistReqV1:
    properties:
      desc:
        example: used for rapid release
        type: string
      value:
        example: create table
        type: string
    type: object
  v1.CreateInstanceReqV1:
    properties:
      db_host:
        example: 10.10.10.10
        type: string
      db_password:
        example: "123456"
        type: string
      db_port:
        example: "3306"
        type: string
      db_user:
        example: root
        type: string
      desc:
        example: this is a test instance
        type: string
      instance_name:
        example: test
        type: string
      role_name_list:
        items:
          type: string
        type: array
      rule_template_name_list:
        items:
          type: string
        type: array
      workflow_template_name:
        type: string
    type: object
  v1.CreateRoleReqV1:
    properties:
      instance_name_list:
        items:
          type: string
        type: array
      role_desc:
        type: string
      role_name:
        type: string
      user_name_list:
        items:
          type: string
        type: array
    type: object
  v1.CreateRuleTemplateReqV1:
    properties:
      desc:
        type: string
      instance_name_list:
        items:
          type: string
        type: array
      rule_name_list:
        example:
        - ddl_check_index_count
        items:
          type: string
        type: array
      rule_template_name:
        type: string
    type: object
  v1.CreateUserReqV1:
    properties:
      email:
        example: test@email.com
        type: string
      role_name_list:
        items:
          type: string
        type: array
      user_name:
        example: test
        type: string
      user_password:
        example: "123456"
        type: string
    type: object
  v1.CreateWorkflowReqV1:
    properties:
      desc:
        type: string
      task_id:
        type: string
      workflow_subject:
        type: string
    type: object
  v1.CreateWorkflowTemplateReqV1:
    properties:
      desc:
        type: string
      instance_name_list:
        items:
          type: string
        type: array
      workflow_step_template_list:
        items:
          $ref: '#/definitions/v1.WorkFlowStepTemplateReqV1'
        type: array
      workflow_template_name:
        type: string
    type: object
  v1.DashboardResV1:
    properties:
      workflow_statistics:
        $ref: '#/definitions/v1.WorkflowStatisticsResV1'
        type: object
    type: object
  v1.GetAuditTaskResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.AuditTaskResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetAuditTaskSQLsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.AuditTaskSQLResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetAuditWhitelistResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.AuditWhitelistResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetDashboardResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.DashboardResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetInstanceConnectableReqV1:
    properties:
      host:
        example: 10.10.10.10
        type: string
      password:
        example: "123456"
        type: string
      port:
        example: "3306"
        type: string
      user:
        example: root
        type: string
    type: object
  v1.GetInstanceConnectableResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.InstanceConnectableResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetInstanceResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.InstanceResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetInstanceSchemaResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.InstanceSchemaResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetInstanceTipsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.InstanceTipResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetInstancesResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.InstanceResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetRoleTipsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.RoleTipResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetRolesResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.RoleResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetRuleTemplateResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.RuleTemplateDetailResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetRuleTemplateTipsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.RuleTemplateTipResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetRuleTemplatesResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.RuleTemplateDetailResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetRulesResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.RuleResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetUserDetailResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.UserDetailResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetUserLoginResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.UserLoginResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetUserTipsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.UserTipResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetUsersResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.UserResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetWorkflowResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.WorkflowResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetWorkflowTemplateResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/v1.WorkflowTemplateDetailResV1'
        type: object
      message:
        example: ok
        type: string
    type: object
  v1.GetWorkflowTemplateTipResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.WorkflowTemplateTipResV1'
        type: array
      message:
        example: ok
        type: string
    type: object
  v1.GetWorkflowTemplatesResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.WorkflowTemplateResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.GetWorkflowsResV1:
    properties:
      code:
        example: 0
        type: integer
      data:
        items:
          $ref: '#/definitions/v1.WorkflowDetailResV1'
        type: array
      message:
        example: ok
        type: string
      total_nums:
        type: integer
    type: object
  v1.InstanceConnectableResV1:
    properties:
      connect_error_message:
        type: string
      is_instance_connectable:
        type: boolean
    type: object
  v1.InstanceResV1:
    properties:
      db_host:
        example: 10.10.10.10
        type: string
      db_port:
        example: "3306"
        type: string
      db_user:
        example: root
        type: string
      desc:
        example: this is a instance
        type: string
      instance_name:
        type: string
      role_name_list:
        items:
          type: string
        type: array
      rule_template_name_list:
        items:
          type: string
        type: array
      workflow_template_name:
        type: string
    type: object
  v1.InstanceSchemaResV1:
    properties:
      schema_name_list:
        items:
          type: string
        type: array
    type: object
  v1.InstanceTipResV1:
    properties:
      instance_name:
        type: string
    type: object
  v1.RejectWorkflowReqV1:
    properties:
      reason:
        type: string
    type: object
  v1.RoleResV1:
    properties:
      instance_name_list:
        items:
          type: string
        type: array
      role_desc:
        type: string
      role_name:
        type: string
      user_name_list:
        items:
          type: string
        type: array
    type: object
  v1.RoleTipResV1:
    properties:
      role_name:
        type: string
    type: object
  v1.RuleResV1:
    properties:
      desc:
        type: string
      level:
        enum:
        - normal
        - notice
        - warn
        - error
        example: error
        type: string
      rule_name:
        type: string
      value:
        type: string
    type: object
  v1.RuleTemplateDetailResV1:
    properties:
      desc:
        type: string
      instance_name_list:
        items:
          type: string
        type: array
      rule_name_list:
        items:
          type: string
        type: array
      rule_template_name:
        type: string
    type: object
  v1.RuleTemplateTipResV1:
    properties:
      rule_template_name:
        type: string
    type: object
  v1.UpdateAuditWhitelistReqV1:
    properties:
      desc:
        example: used for rapid release
        type: string
      value:
        example: create table
        type: string
    type: object
  v1.UpdateCurrentUserReqV1:
    properties:
      email:
        type: string
    type: object
  v1.UpdateInstanceReqV1:
    properties:
      db_host:
        example: 10.10.10.10
        type: string
      db_password:
        example: "123456"
        type: string
      db_port:
        example: "3306"
        type: string
      db_user:
        example: root
        type: string
      desc:
        example: this is a test instance
        type: string
      role_name_list:
        items:
          type: string
        type: array
      rule_template_name_list:
        items:
          type: string
        type: array
      workflow_template_name:
        type: string
    type: object
  v1.UpdateRoleReqV1:
    properties:
      instance_name_list:
        items:
          type: string
        type: array
      role_desc:
        type: string
      user_name_list:
        items:
          type: string
        type: array
    type: object
  v1.UpdateRuleTemplateReqV1:
    properties:
      desc:
        type: string
      instance_name_list:
        example:
        - mysql-xxx
        items:
          type: string
        type: array
      rule_name_list:
        example:
        - ddl_check_index_count
        items:
          type: string
        type: array
    type: object
  v1.UpdateUserReqV1:
    properties:
      email:
        type: string
      role_name_list:
        items:
          type: string
        type: array
    type: object
  v1.UpdateWorkflowTemplateReqV1:
    properties:
      desc:
        type: string
      instance_name_list:
        items:
          type: string
        type: array
      workflow_step_template_list:
        items:
          $ref: '#/definitions/v1.WorkFlowStepTemplateReqV1'
        type: array
    type: object
  v1.UserDetailResV1:
    properties:
      email:
        type: string
      is_admin:
        type: boolean
      role_name_list:
        items:
          type: string
        type: array
      user_name:
        type: string
    type: object
  v1.UserLoginReqV1:
    properties:
      password:
        example: "123456"
        type: string
      username:
        example: test
        type: string
    type: object
  v1.UserLoginResV1:
    properties:
      token:
        example: this is a jwt token string
        type: string
    type: object
  v1.UserResV1:
    properties:
      email:
        type: string
      role_name_list:
        items:
          type: string
        type: array
      user_name:
        type: string
    type: object
  v1.UserTipResV1:
    properties:
      user_name:
        type: string
    type: object
  v1.WorkFlowStepTemplateReqV1:
    properties:
      assignee_user_name_list:
        items:
          type: string
        type: array
      desc:
        type: string
      type:
        enum:
        - sql_review
        - sql_execute
        type: string
    type: object
  v1.WorkFlowStepTemplateResV1:
    properties:
      assignee_user_name_list:
        items:
          type: string
        type: array
      desc:
        type: string
      number:
        type: integer
      type:
        type: string
    type: object
  v1.WorkflowDetailResV1:
    properties:
      create_time:
        type: string
      create_user_name:
        type: string
      current_step_assignee_user_name_list:
        items:
          type: string
        type: array
      current_step_type:
        enum:
        - sql_review
        - sql_execute
        type: string
      desc:
        type: string
      status:
        enum:
        - on_process
        - finished
        - rejected
        - canceled
        type: string
      subject:
        type: string
      task_instance_name:
        type: string
      task_instance_schema:
        type: string
      task_pass_rate:
        type: number
      task_status:
        enum:
        - initialized
        - audited
        - executing
        - exec_success
        - exec_failed
        type: string
      workflow_id:
        type: integer
    type: object
  v1.WorkflowRecordResV1:
    properties:
      current_step_number:
        type: integer
      status:
        enum:
        - on_process
        - finished
        - rejected
        - canceled
        type: string
      task_id:
        type: integer
      workflow_step_list:
        items:
          $ref: '#/definitions/v1.WorkflowStepResV1'
        type: array
    type: object
  v1.WorkflowResV1:
    properties:
      create_time:
        type: string
      create_user_name:
        type: string
      desc:
        type: string
      record:
        $ref: '#/definitions/v1.WorkflowRecordResV1'
        type: object
      record_history_list:
        items:
          $ref: '#/definitions/v1.WorkflowRecordResV1'
        type: array
      subject:
        type: string
      workflow_id:
        type: integer
    type: object
  v1.WorkflowStatisticsResV1:
    properties:
      my_on_process_workflow_number:
        type: integer
      my_rejected_workflow_number:
        type: integer
      need_me_to_execute_workflow_number:
        type: integer
      need_me_to_review_workflow_number:
        type: integer
    type: object
  v1.WorkflowStepResV1:
    properties:
      assignee_user_name_list:
        items:
          type: string
        type: array
      desc:
        type: string
      number:
        type: integer
      operation_time:
        type: string
      operation_user_name:
        type: string
      reason:
        type: string
      state:
        enum:
        - initialized
        - approved
        - rejected
        type: string
      type:
        type: string
      workflow_step_id:
        type: integer
    type: object
  v1.WorkflowTemplateDetailResV1:
    properties:
      desc:
        type: string
      instance_name_list:
        items:
          type: string
        type: array
      workflow_step_template_list:
        items:
          $ref: '#/definitions/v1.WorkFlowStepTemplateResV1'
        type: array
      workflow_template_name:
        type: string
    type: object
  v1.WorkflowTemplateResV1:
    properties:
      desc:
        type: string
      workflow_template_name:
        type: string
    type: object
  v1.WorkflowTemplateTipResV1:
    properties:
      workflow_template_name:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server for dev.
  license: {}
  title: Sqle API Docs
  version: "1.0"
paths:
  /v1/audit_whitelist:
    get:
      description: get all whitelist
      operationId: getAuditWhitelistV1
      parameters:
      - description: page index
        in: query
        name: page_index
        type: string
      - description: page size
        in: query
        name: page_size
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetAuditWhitelistResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取Sql审核白名单
      tags:
      - audit_whitelist
    post:
      consumes:
      - application/json
      description: create a sql whitelist
      operationId: createAuditWhitelistV1
      parameters:
      - description: add sql whitelist req
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateAuditWhitelistReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 添加SQL白名单
      tags:
      - audit_whitelist
  /v1/audit_whitelist/{audit_whitelist_id}/:
    delete:
      description: remove sql white
      operationId: deleteAuditWhitelistByIdV1
      parameters:
      - description: audit whitelist id
        in: path
        name: audit_whitelist_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除SQL白名单信息
      tags:
      - audit_whitelist
    patch:
      consumes:
      - application/json
      description: update sql whitelist by id
      operationId: UpdateAuditWhitelistByIdV1
      parameters:
      - description: sql audit whitelist id
        in: path
        name: audit_whitelist_id
        required: true
        type: string
      - description: update sql whitelist req
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateAuditWhitelistReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新SQL白名单
      tags:
      - audit_whitelist
  /v1/dashboard:
    get:
      description: get dashboard info
      operationId: getDashboardV1
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetDashboardResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取 dashboard 信息
      tags:
      - dashboard
  /v1/instance_connection:
    post:
      consumes:
      - application/json
      description: test instance db connection 注：可直接提交创建实例接口的body，该接口的json 内容是创建实例的
        json 的子集
      operationId: checkInstanceIsConnectableV1
      parameters:
      - description: instance info
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.GetInstanceConnectableReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstanceConnectableResV1'
      security:
      - ApiKeyAuth: []
      summary: 实例连通性测试（实例提交前）
      tags:
      - instance
  /v1/instance_tips:
    get:
      description: get instance tip list
      operationId: getInstanceTipListV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstanceTipsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取实例提示列表
      tags:
      - instance
  /v1/instances:
    get:
      description: get instance info list
      operationId: getInstanceListV1
      parameters:
      - description: filter instance name
        in: query
        name: filter_instance_name
        type: string
      - description: filter db host
        in: query
        name: filter_db_host
        type: string
      - description: filter db port
        in: query
        name: filter_db_port
        type: string
      - description: filter db user
        in: query
        name: filter_db_user
        type: string
      - description: filter workflow rule template name
        in: query
        name: filter_workflow_template_name
        type: string
      - description: filter rule template name
        in: query
        name: filter_rule_template_name
        type: string
      - description: filter role name
        in: query
        name: filter_role_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstancesResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取实例信息列表
      tags:
      - instance
    post:
      consumes:
      - application/json
      description: create a instance
      operationId: createInstanceV1
      parameters:
      - description: add instance
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateInstanceReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 添加实例
      tags:
      - instance
  /v1/instances/{instance_name}/:
    delete:
      description: delete instance db
      operationId: deleteInstanceV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除实例
      tags:
      - instance
    get:
      description: get instance db
      operationId: getInstanceV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstanceResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取实例信息
      tags:
      - instance
    patch:
      description: update instance
      operationId: updateInstanceV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      - description: update instance request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateInstanceReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新实例
      tags:
      - instance
  /v1/instances/{instance_name}/connection:
    get:
      description: test instance db connection
      operationId: checkInstanceIsConnectableByNameV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstanceConnectableResV1'
      security:
      - ApiKeyAuth: []
      summary: 实例连通性测试（实例提交后）
      tags:
      - instance
  /v1/instances/{instance_name}/rules:
    get:
      description: get instance all rule
      operationId: getInstanceRuleListV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRulesResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取实例应用的规则列表
      tags:
      - instance
  /v1/instances/{instance_name}/schemas:
    get:
      description: instance schema list
      operationId: getInstanceSchemasV1
      parameters:
      - description: instance name
        in: path
        name: instance_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetInstanceSchemaResV1'
      security:
      - ApiKeyAuth: []
      summary: 实例 Schema 列表
      tags:
      - instance
  /v1/login:
    post:
      description: user login
      operationId: loginV1
      parameters:
      - description: user login request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/v1.UserLoginReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUserLoginResV1'
      summary: 用户登录
      tags:
      - user
  /v1/role_tips:
    get:
      description: get role tip list
      operationId: getRoleTipListV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRoleTipsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取角色提示列表
      tags:
      - role
  /v1/roles:
    get:
      consumes:
      - application/json
      description: get role list
      operationId: getRoleListV1
      parameters:
      - description: filter role name
        in: query
        name: filter_role_name
        type: string
      - description: filter user name
        in: query
        name: filter_user_name
        type: string
      - description: filter instance name
        in: query
        name: filter_instance_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRolesResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取角色列表
      tags:
      - role
    post:
      consumes:
      - application/json
      description: create role
      operationId: createRoleV1
      parameters:
      - description: create role
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateRoleReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 创建角色
      tags:
      - role
  /v1/roles/{role_name}/:
    delete:
      consumes:
      - application/json
      description: delete role
      operationId: deleteRoleV1
      parameters:
      - description: role name
        in: path
        name: role_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除角色
      tags:
      - role
    patch:
      consumes:
      - application/json
      description: update role
      operationId: updateRoleV1
      parameters:
      - description: role name
        in: path
        name: role_name
        required: true
        type: string
      - description: update role request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateRoleReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新角色信息
      tags:
      - role
  /v1/rule_template_tips:
    get:
      description: get rule template tips
      operationId: getRuleTemplateTipsV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRuleTemplateTipsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取规则模板提示
      tags:
      - rule_template
  /v1/rule_templates:
    get:
      description: get all rule template
      operationId: getRuleTemplateListV1
      parameters:
      - description: filter instance name
        in: query
        name: filter_instance_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRuleTemplatesResV1'
      security:
      - ApiKeyAuth: []
      summary: 规则模板列表
      tags:
      - rule_template
    post:
      consumes:
      - application/json
      description: create a rule template
      operationId: createRuleTemplateV1
      parameters:
      - description: add rule template request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateRuleTemplateReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 添加规则模板
      tags:
      - rule_template
  /v1/rule_templates/{rule_template_name}/:
    delete:
      description: delete rule template
      operationId: deleteRuleTemplateV1
      parameters:
      - description: rule template name
        in: path
        name: rule_template_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除规则模板
      tags:
      - rule_template
    get:
      description: get rule template
      operationId: getRuleTemplateV1
      parameters:
      - description: rule template name
        in: path
        name: rule_template_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRuleTemplateResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取规则模板信息
      tags:
      - rule_template
    patch:
      description: update rule template
      operationId: updateRuleTemplateV1
      parameters:
      - description: rule template name
        in: path
        name: rule_template_name
        required: true
        type: string
      - description: update rule template request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateRuleTemplateReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新规则模板
      tags:
      - rule_template
  /v1/rules:
    get:
      description: get all rule template
      operationId: getRuleListV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetRulesResV1'
      security:
      - ApiKeyAuth: []
      summary: 规则列表
      tags:
      - rule_template
  /v1/tasks/audits:
    post:
      consumes:
      - multipart/form-data
      description: 'create and audit a task. NOTE: it will create a task with sqls
        from "sql" if "sql" isn''t empty'
      operationId: createAndAuditTaskV1
      parameters:
      - description: instance name
        in: formData
        name: instance_name
        required: true
        type: string
      - description: schema of instance
        in: formData
        name: instance_schema
        type: string
      - description: sqls for audit
        in: formData
        name: sql
        type: string
      - description: input SQL file
        in: formData
        name: input_sql_file
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetAuditTaskResV1'
      security:
      - ApiKeyAuth: []
      summary: 创建Sql审核任务并提交审核
      tags:
      - task
  /v1/tasks/audits/{task_id}/:
    get:
      description: get task
      operationId: getAuditTaskV1
      parameters:
      - description: task id
        in: path
        name: task_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetAuditTaskResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取Sql审核任务信息
      tags:
      - task
  /v1/tasks/audits/{task_id}/sql_file:
    get:
      description: download SQL file for the audit task
      operationId: downloadAuditTaskSQLFileV1
      parameters:
      - description: task id
        in: path
        name: task_id
        required: true
        type: string
      responses:
        "200":
          description: sql file
          schema:
            type: file
      security:
      - ApiKeyAuth: []
      summary: 下载指定审核任务的SQL文件
      tags:
      - task
  /v1/tasks/audits/{task_id}/sql_report:
    get:
      description: download report file of all SQLs information belong to the specified
        audit task
      operationId: downloadAuditTaskSQLReportV1
      parameters:
      - description: task id
        in: path
        name: task_id
        required: true
        type: string
      - description: select unique (fingerprint and audit result) for task sql
        in: query
        name: no_duplicate
        type: boolean
      responses:
        "200":
          description: sql report csv file
          schema:
            type: file
      security:
      - ApiKeyAuth: []
      summary: 下载指定审核任务的SQLs信息报告
      tags:
      - task
  /v1/tasks/audits/{task_id}/sqls:
    get:
      description: get information of all SQLs belong to the specified audit task
      operationId: getAuditTaskSQLsV1
      parameters:
      - description: task id
        in: path
        name: task_id
        required: true
        type: string
      - description: 'filter: exec status of task sql'
        enum:
        - initialized
        - doing
        - succeeded
        - failed
        in: query
        name: filter_exec_status
        type: string
      - description: 'filter: audit status of task sql'
        enum:
        - initialized
        - doing
        - finished
        in: query
        name: filter_audit_status
        type: string
      - description: select unique (fingerprint and audit result) for task sql
        in: query
        name: no_duplicate
        type: boolean
      - description: page index
        in: query
        name: page_index
        type: string
      - description: page size
        in: query
        name: page_size
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetAuditTaskSQLsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取指定审核任务的SQLs信息
      tags:
      - task
  /v1/user:
    get:
      description: get current user info
      operationId: getCurrentUserV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUserDetailResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取当前用户信息
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: update current user
      operationId: updateCurrentUserV1
      parameters:
      - description: update user
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateCurrentUserReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新个人信息
      tags:
      - user
  /v1/user_tips:
    get:
      description: get user tip list
      operationId: getUserTipListV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUserTipsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取用户提示列表
      tags:
      - user
  /v1/users:
    get:
      description: get user info list
      operationId: getUserListV1
      parameters:
      - description: filter user name
        in: query
        name: filter_user_name
        type: string
      - description: filter role name
        in: query
        name: filter_role_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUsersResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息列表
      tags:
      - user
    post:
      consumes:
      - application/json
      description: create user
      operationId: createUserV1
      parameters:
      - description: create user
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateUserReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 创建用户
      tags:
      - user
  /v1/users/{user_name}/:
    delete:
      description: delete user
      operationId: deleteUserV1
      parameters:
      - description: user name
        in: path
        name: user_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - user
    get:
      description: get user info
      operationId: getUserV1
      parameters:
      - description: user name
        in: path
        name: user_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetUserDetailResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: update user
      operationId: updateUserV1
      parameters:
      - description: user name
        in: path
        name: user_name
        required: true
        type: string
      - description: update user
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateUserReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新用户信息
      tags:
      - user
  /v1/workflow_template_tips:
    get:
      description: get workflow template tips
      operationId: getWorkflowTemplateTipsV1
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetWorkflowTemplateTipResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取审批流程模板提示信息
      tags:
      - workflow
  /v1/workflow_templates:
    get:
      description: get workflow template list
      operationId: getWorkflowTemplateListV1
      parameters:
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetWorkflowTemplatesResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取审批流程模板列表
      tags:
      - workflow
    post:
      consumes:
      - application/json
      description: create a workflow template
      operationId: createWorkflowTemplateV1
      parameters:
      - description: create workflow template request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateWorkflowTemplateReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 创建Sql审批流程模板
      tags:
      - workflow
  /v1/workflow_templates/{workflow_template_name}/:
    delete:
      consumes:
      - application/json
      description: update the workflow template
      operationId: deleteWorkflowTemplateV1
      parameters:
      - description: workflow template name
        in: path
        name: workflow_template_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 删除Sql审批流程模板
      tags:
      - workflow
    get:
      description: get workflow template detail
      operationId: getWorkflowTemplateV1
      parameters:
      - description: workflow template name
        in: path
        name: workflow_template_name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetWorkflowTemplateResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取审批流程模板详情
      tags:
      - workflow
    patch:
      consumes:
      - application/json
      description: update the workflow template
      operationId: updateWorkflowTemplateV1
      parameters:
      - description: workflow template name
        in: path
        name: workflow_template_name
        required: true
        type: string
      - description: create workflow template
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateWorkflowTemplateReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 更新Sql审批流程模板
      tags:
      - workflow
  /v1/workflows:
    get:
      description: get workflow list
      operationId: getWorkflowListV1
      parameters:
      - description: filter create user name
        in: query
        name: filter_create_user_name
        type: string
      - description: filter current step type
        enum:
        - sql_review
        - sql_execute
        in: query
        name: filter_current_step_type
        type: string
      - description: filter workflow status
        enum:
        - on_process
        - finished
        - rejected
        - canceled
        in: query
        name: filter_status
        type: string
      - description: filter current step assignee user name
        in: query
        name: filter_current_step_assignee_user_name
        type: string
      - description: filter task status
        enum:
        - initialized
        - audited
        - executing
        - exec_success
        - exec_failed
        in: query
        name: filter_task_status
        type: string
      - description: filter instance name
        in: query
        name: filter_task_instance_name
        type: string
      - description: page index
        in: query
        name: page_index
        type: integer
      - description: size of per page
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetWorkflowsResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取审批流程列表
      tags:
      - workflow
    post:
      consumes:
      - application/json
      description: create workflow
      operationId: createWorkflowV1
      parameters:
      - description: create workflow request
        in: body
        name: instance
        required: true
        schema:
          $ref: '#/definitions/v1.CreateWorkflowReqV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 创建工单
      tags:
      - workflow
  /v1/workflows/{workflow_id}/:
    get:
      description: get workflow detail
      operationId: getWorkflowV1
      parameters:
      - description: workflow id
        in: path
        name: workflow_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetWorkflowResV1'
      security:
      - ApiKeyAuth: []
      summary: 获取审批流程详情
      tags:
      - workflow
  /v1/workflows/{workflow_id}/cancel:
    post:
      description: cancel workflow
      operationId: cancelWorkflowV1
      parameters:
      - description: workflow id
        in: path
        name: workflow_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 审批关闭（中止）
      tags:
      - workflow
  /v1/workflows/{workflow_id}/steps/{workflow_step_id}/approve:
    post:
      description: approve workflow
      operationId: approveWorkflowV1
      parameters:
      - description: workflow id
        in: path
        name: workflow_id
        required: true
        type: string
      - description: workflow step id
        in: path
        name: workflow_step_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 审批通过
      tags:
      - workflow
  /v1/workflows/{workflow_id}/steps/{workflow_step_id}/reject:
    post:
      description: reject workflow
      operationId: rejectWorkflowV1
      parameters:
      - description: workflow id
        in: path
        name: workflow_id
        required: true
        type: string
      - description: workflow step id
        in: path
        name: workflow_step_id
        required: true
        type: string
      - description: workflow approve request
        in: body
        name: workflow_approve
        required: true
        schema:
          $ref: '#/definitions/v1.RejectWorkflowReqV1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BaseRes'
      security:
      - ApiKeyAuth: []
      summary: 审批驳回
      tags:
      - workflow
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
